name: Build Ockam Binaries For Different Architechtures
description: Build Ockam Binaries For Different Architechtures

inputs:
  build_command:
    description: Indicate if building the ockam command
    default: "true"
  build_app:
    description: Indicate if we are also building ockam app
    default: "false"
  use_cross_build:
    description: Indicate If Cross Should Be Used To Build Binary Instead Of Cargo
    required: true
  toolchain:
    description: Indicate Toolchain To Use, Nightly or Stable
    default: stable
  target:
    description: Indicate Binary Target, e.g. x86_64-apple-darwin
    required: true
  platform_operating_system:
    description: Operating System Which We Are Building Binaries On
    required: true

runs:
  using: composite
  steps:
    - shell: bash
      run: |
        # This will allow us update to rust version indicated in our rust-toolchain.toml file
        rustup show
        rustup target add ${{ inputs.target }}

    - shell: bash
      if: inputs.platform_operating_system == 'ubuntu-22.04'
      run: |
        set -x
        use_cross_build=${{ inputs.use_cross_build }}
        if [[ $use_cross_build == true ]]; then
          cargo install --version 0.2.5 cross
        else
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gcc g++ libclang-dev xz-utils liblz4-tool musl-tools
        fi

    ## TODO Cache for faster build for different targets

    - shell: bash
      if: inputs.build_command == 'true'
      run: |
        set -x
        use_cross_build="${{ inputs.use_cross_build }}"

        if [[ "${{ inputs.target }}" =~ .+-musl(.+)?  ]]; then
          export RUSTFLAGS='-C target-feature=+crt-static'
        fi

        if [[ $use_cross_build == "true" ]]; then
          cross build --bin ockam --target ${{ inputs.target }} --release --no-default-features -F ockam_command/aws-lc -F ockam_command/orchestrator
        else
          cargo build --bin ockam --target ${{ inputs.target }} --release --no-default-features -F ockam_command/aws-lc -F ockam_command/orchestrator
        fi

        cp target/${{ inputs.target }}/release/ockam target/${{ inputs.target }}/release/ockam_command
